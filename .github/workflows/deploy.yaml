name: deploy and integration test

permissions:
  id-token: write  # required for requesting the JWT
  contents: read  # required for actions/checkout

on:

  push:
    branches:
      - "feat/add-integration-tests"
    

jobs:
  deploy-and-integration-test:
    runs-on: ubuntu-latest
    env:
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION_DEPLOY }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_DEPLOY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEPLOY }}


    steps:

    - name: Checkout repository with template stack
      uses: actions/checkout@v3
      with:
        repository: developmentseed/eoapi-template
        path: eoapi-template

    - name: Set up python
      uses: actions/setup-python@v2
      with:
        cache: pip
        
    - name: Install deployment environment
      working-directory: eoapi-template
      run: |
        python -m venv .deployment_venv
        source .deployment_venv/bin/activate
        pip install -r requirements.txt
        pip install --upgrade eoapi-cdk
        npm install -g aws-cdk
        deactivate

    - name: Synthesize the stack
      working-directory: eoapi-template
      run: |
        source .deployment_venv/bin/activate
        cdk synth --debug --all --require-approval never
        deactivate


    - name: Deploy the stack
      id: deploy_step
      working-directory: eoapi-template
      run: |
        source .deployment_venv/bin/activate
        cdk deploy --ci --all --require-approval never
        echo "ingestor_url=$(aws cloudformation describe-stacks --stack-name eoapi-template-demo-test-pgSTAC-infra --query "Stacks[0].Outputs[?starts_with(OutputKey, 'stacingestor')].OutputValue | [0]" --output text)" >> $GITHUB_OUTPUT
        echo "stac_api_url=$(aws cloudformation describe-stacks --stack-name eoapi-template-demo-test-pgSTAC-infra --query "Stacks[0].Outputs[?starts_with(OutputKey, 'pgstacapi')].OutputValue | [0]" --output text)" >> $GITHUB_OUTPUT
        echo "titiler_pgstac_api_url=$(aws cloudformation describe-stacks --stack-name eoapi-template-demo-test-pgSTAC-infra --query "Stacks[0].Outputs[?starts_with(OutputKey, 'titilerpgstac')].OutputValue | [0]" --output text)" >> $GITHUB_OUTPUT
        deactivate

    - name: Checkout the repo with the tests
      uses: actions/checkout@v3
      with:
        repository: developmentseed/eoapi-tests
        ref: initial-PR
        path: tests

    - name: Test the stack
      working-directory: tests
      env:
        ingestor_url: ${{ steps.deploy_step.outputs.ingestor_url }}
        stac_api_url: ${{ steps.deploy_step.outputs.stac_api_url }}
        titiler_pgstac_api_url: ${{ steps.deploy_step.outputs.titiler_pgstac_api_url }}
      run: |
        python -m venv .tests_venv
        source .tests_venv/bin/activate
        pip install -e .
        pytest eoapi_tests
        deactivate

    - name: Always tear down the stack
      if: always()
      working-directory: eoapi-template
      run: |
        source .deployment_venv/bin/activate
        cdk destroy --ci --all --force
        deactivate
