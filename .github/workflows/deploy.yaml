name: Deploy & Test Deployment

permissions:
  id-token: write  # required for requesting the JWT
  contents: read  # required for actions/checkout

on:
  # run this workflow when the `Distribute` workflow completes
  workflow_run:
    workflows: [Distribute]
    types: [completed]
  # ... or manually. 
  workflow_dispatch:
    
jobs:
  # run a job on a successful `Workflow` run. 
  on-successful-release:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    env:
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION_DEPLOY }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_DEPLOY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEPLOY }}


    steps:

    - name: Checkout repository # for runs after `Distribute`, pulling from main will always give the latest eoapi-cdk. 
      uses: actions/checkout@v3

    - name: Set up python
      uses: actions/setup-python@v2
      with:
        cache: pip

    - name: Set up node
      uses: actions/setup-node@v3
      with:
        node-version: '18'
      
    - name: Install deployment environment
      working-directory: integration_tests/cdk
      run: |
        python -m venv .deployment_venv
        source .deployment_venv/bin/activate
        pip install -r requirements.txt
        pip install --upgrade eoapi-cdk # make sure to take the latest version of eoapi-cdk since we're integration-testing the newest release. 
        npm install
        deactivate

    - name: Synthesize the stack
      working-directory: integration_tests/cdk
      run: |
        source .deployment_venv/bin/activate
        cdk synth --debug --all --require-approval never
        deactivate

    # deploys and grabs URLs from the output for later tests
    - name: Deploy the stack
      id: deploy_step
      working-directory: integration_tests/cdk
      run: |
        source .deployment_venv/bin/activate
        cdk deploy --ci --all --require-approval never
        echo "ingestor_url=$(aws cloudformation describe-stacks --stack-name eoapi-template-demo-test-pgSTAC-infra --query "Stacks[0].Outputs[?starts_with(OutputKey, 'stacingestor')].OutputValue | [0]" --output text)" >> $GITHUB_OUTPUT
        echo "stac_api_url=$(aws cloudformation describe-stacks --stack-name eoapi-template-demo-test-pgSTAC-infra --query "Stacks[0].Outputs[?starts_with(OutputKey, 'pgstacapi')].OutputValue | [0]" --output text)" >> $GITHUB_OUTPUT
        echo "titiler_pgstac_api_url=$(aws cloudformation describe-stacks --stack-name eoapi-template-demo-test-pgSTAC-infra --query "Stacks[0].Outputs[?starts_with(OutputKey, 'titilerpgstac')].OutputValue | [0]" --output text)" >> $GITHUB_OUTPUT
        deactivate

    - name: Install test environment
      working-directory: integration_tests/tests
      run: |
        python -m venv .tests_venv
        source .tests_venv/bin/activate
        pip install -r requirements.txt
        deactivate

    - name: Test the stack
      working-directory: integration_tests/tests
      env:
        ingestor_url: ${{ steps.deploy_step.outputs.ingestor_url }}
        stac_api_url: ${{ steps.deploy_step.outputs.stac_api_url }}
        titiler_pgstac_api_url: ${{ steps.deploy_step.outputs.titiler_pgstac_api_url }}
      run: |
        source .tests_venv/bin/activate
        pytest eoapi_tests
        deactivate

    - name: Always tear down the stack
      if: always()
      working-directory: integration_tests/cdk
      run: |
        source .deployment_venv/bin/activate
        cdk destroy --ci --all --force
        deactivate
